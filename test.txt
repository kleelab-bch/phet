normalize = "zcore"
q = 0.75
iqr_range = (25, 75)
num_subsamples = 1000
subsampling_size = 3
significant_p: float = 0.05
partition_by_anova = False
num_components = 10
num_subclusters = 10
binary_clustering = True
feature_weight = [0.4, 0.3, 0.2, 0.1]
criterion = 'entropy'
max_features="sqrt"
max_depth = 3
min_samples_split = 2
num_epochs = 10
num_rounds = 50
calculate_pval = False
num_jobs = 4
partition_data = False
control_class = 0
case_class = 1

standardize=True
num_neighbors = 15
min_dist = 0
cluster_type = "spectral"
num_clusters = 0
suptitle=stat_name.upper()
file_name=file_name + "_" + stat_name.lower()
save_path=RESULT_PATH

df = pd.read_excel(os.path.join(DATASET_PATH, "SupTab3_Consensus_Sigs.xlsx")).replace(np.nan, -1)
marker_genes = list(set([item for item in df.to_numpy().flatten() if item != -1]))
df[["Basal"]].replace(-1, np.nan).dropna(axis=0)

# KS test

sample_size = 1000

# complete change
control = np.random.normal(loc=1, scale=1, size=sample_size)
case = np.random.normal(loc=2, scale=1, size=sample_size)
complete_change = ks_2samp(control, case)[1]

# majority change
control = np.random.normal(loc=1, scale=1, size=sample_size)
case = np.random.normal(loc=1, scale=1, size=sample_size)
majority_ids = np.random.choice(range(sample_size), size=int(sample_size * 0.7), replace=False)
case[majority_ids] += np.random.normal(loc=0, scale=1, size=len(majority_ids))
majority_change = ks_2samp(control, case)[1]

# minority change
control = np.random.normal(loc=1, scale=1, size=sample_size)
case = np.random.normal(loc=1, scale=1, size=sample_size)
minority_ids = np.random.choice(range(sample_size), size=int(sample_size * 0.3), replace=False)
case[minority_ids] += np.random.normal(loc=0, scale=1, size=len(minority_ids))
minority_change = ks_2samp(control, case)[1]

# print
complete_change, majority_change, minority_change